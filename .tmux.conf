set -g update-environment -r
#setenv -g SSH_AUTH_SOCK $HOME/.ssh/ssh_auth_sock

set -g mouse on

# Set a better prefix
set-option -g prefix C-a
bind-key -n C-f send-prefix

set -g default-terminal "screen-256color"

# More history, please
set-option -g history-limit 500000

# Start window and pane numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Allow for faster key repetition
set -sg escape-time 0
set -sg repeat-time 600

set-option -g detach-on-destroy off

#bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "nc -U ~/.clipper.sock"
#bind-key -T copy-mode-vi c send-keys -X copy-pipe-and-cancel "code -"

# Set up the status bar.
# Show colors: for i in {0..255} ; do printf "\x1b[38;5;${i}mcolour${i}\n"; done
set-window-option -g window-status-format '#W '
set-window-option -g window-status-current-format '#W '
set -g status-bg colour238
set -g status-fg colour30
set -g status-left ""

set -g status-right-length 256
set -g status-right "#[fg=blue]k8s(#(basename $(print-var.sh KUBECONFIG) .kubeconfig)) #[fg=yellow]aws(#(basename $(print-var.sh AWS_PROFILE) .creds)) #[fg=green][#S] #[fg=yellow]%l:%M #[fg=white]#H"

set -g pane-active-border-style fg=colour4
set -g pane-border-style fg=colour238
set -g window-status-style fg=colour244
set -g window-status-current-style bg=colour238,fg=white

set-option -g allow-rename off

# Use vi mode for scrollback, etc.
set-window-option -g mode-keys vi

# Make the terminal tab titles follow the tmux window selection
set-option -g set-titles on
set-option -g set-titles-string '[#S:#I #H] #W'

# Fix new pane pwd
bind c new-window -c "#{pane_current_path}"

# Add easy config reloading
bind-key r source-file ~/.tmux.conf \; display "Reloaded tmux.conf"

bind "C-u" copy-mode 

# Splits
bind | split-window -h
bind - split-window -v
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

# Window selection
bind-key -n "C-M-NPage" next-window
bind-key -n "C-M-PPage" previous-window
bind -r l next-window
bind -r h previous-window
bind -r -n M-l next-window
bind -r -n M-h previous-window

bind -r [ select-window -t :-
bind -r ] select-window -t :+
# bind-key -r { swap-window -t -1
# bind-key -r } swap-window -t +1

bind -r ( select-window -t :-
bind -r ) select-window -t :+
bind-key -r H swap-window -t -1
bind-key -r L swap-window -t +1

# Easier pane navigation without the prefix
bind-key -n "C-h" select-pane -L\; refresh-client -S
bind-key -n "C-l" select-pane -R\; refresh-client -S
bind-key -n "C-k" select-pane -U\; refresh-client -S
bind-key -n "C-j" select-pane -D\; refresh-client -S

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Session selection
#bind-key -r p choose-session
bind-key -r p split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Pane resizing
bind-key -n "S-M-Left" resize-pane -L 2
bind-key -n "S-M-Right" resize-pane -R 2
bind-key -n "S-M-Up" resize-pane -U 2
bind-key -n "S-M-Down" resize-pane -D 2
bind -r C-h resize-pane -L 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-l resize-pane -R 5

# Easy window movement
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1
bind-key -n C-S-j swap-pane -D
bind-key -n C-S-K swap-pane -U

bind-key a set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"

run-shell ${HOME}/.tmux/tmux-resurrect/resurrect.tmux
set -g @resurrect-capture-pane-contents 'on'
